@page
@model IndexModel
@{
    ViewData["Title"] = Model.Title;
}

<div class="d-flex flex-row flex-wrap justify-content-between align-items-center mb-1">

    <div>
        <h4>Students</h4>

        <form asp-page="./Index" method="get">

            <div class="form-actions no-color d-flex">

                <div class="input-group">
                    <input type="text" name="SearchString" placeholder="Search Names" value="@Model.CurrentFilter" />
                    <div class="input-group-append">
                        <input type="submit" value="Search" class="btn btn-primary" />
                    </div>
                </div>
                <a asp-page="./Index" class="ml-2 btn btn-secondary">Clear</a>

            </div>
        </form>
    </div>

    <a class="btn btn-success" asp-page="Create">Create New</a>

</div>

<table class="table">
    <thead>

        <tr>
            <th>
                <a asp-page="./Index"
                   asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].LastName)
                    @Html.Raw(Model.SortArrowDisplay(Model.NameSortArrow))
                </a>

            </th>

            <th>@Html.DisplayNameFor(model => model.Students[0].FirstMidName)</th>

            <th>

                <a asp-page="./Index"
                   asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].EnrollmentDate)
                    @Html.Raw(Model.SortArrowDisplay(Model.DateSortArrow))
                </a>
            </th>
            <th></th>
        </tr>

    </thead>
    <tbody>
        @foreach (var item in Model.Students)
        {
            <tr>

                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.FirstMidName)</td>
                <td>@Html.DisplayFor(modelItem => item.EnrollmentDate)</td>
                <td class="text-right">

                    <div id="editDetailsDeleteGroup"
                         class="btn-group"
                         role="group"
                         aria-label="Edit-Retreive-Single-Delete">
                        <a class="btn btn-info" asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
                        <a class="btn btn-primary" asp-page="./Details" asp-route-id="@item.ID">Details</a>
                        <a class="btn btn-secondary" asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                    </div>

                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Students.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Students.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>